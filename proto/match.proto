syntax = "proto3";

package match;

service MatchService {
  rpc ConfigMatch (ConfigMatchRequest) returns (ConfigMatchResponse) {}
  rpc VerifyMatch (VerifyMatchRequest) returns (VerifyMatchResponse) {}
  rpc GetAllMatches (GetAllMatchesRequest) returns (GetAllMatchesResponse) {}
  rpc GetMatchDetailById (GetMatchDetailByIdRequest) returns (GetMatchDetailByIdResponse) {}
  rpc GetMatchesByEpicId (GetMatchesByEpicIdRequest) returns (GetMatchesByEpicIdResponse) {}
  rpc GetMatchResultById (GetMatchResultByIdRequest) returns (GetMatchResultByIdResponse) {}
}

message ConfigMatchRequest {
  int32 players = 1;
  int32 ticketsRequired = 2;
  repeated string epicIds = 3;
}
message ConfigMatchResponse {
  int32 status = 1;
  repeated string error = 2;
  int64 id = 3;
  string matchUuid = 4;
  int32 shardsPerTicket = 5;
  int32 shardsForMission = 6;
}
message VerifyMatchRequest {
  string matchUuid = 1;
  int64 shardsPlayers = 2;
  int64 shardsLeft = 3;
  string startedAt = 4;
  string finishedAt = 5;
}
message VerifyMatchResponse {
  int32 status = 1;
  repeated string error = 2;
  string matchUuid = 3;
  string result = 4;
}
message MatchListItem {
  int64 id = 1;
  string matchUuid = 2;
  string startedAt = 3;
  string finishedAt = 4;
}
message GetAllMatchesRequest {
  int64 cursor = 1;
  int32 limit = 2;
  string direction = 3;
}
message GetAllMatchesResponse {
  int32 status = 1;
  repeated string error = 2;
  int64 forwardCursor = 3;
  int64 backwardCursor = 4;
  repeated MatchListItem matchlist = 5;
}
message GetMatchDetailByIdRequest {
  int64 id = 1;
}
message GetMatchDetailByIdResponse {
  int32 status = 1;
  repeated string error = 2;
  int64 id = 3;
  string matchUuid = 4;
  int32 ticketsRequired = 5;
  int32 players = 6;
  int32 shardsPerTicket = 7;
  int32 shardsForMission = 8;
}
message GetMatchesByEpicIdRequest {
  int64 cursor = 1;
  int32 limit = 2;
  string direction = 3;
  string epicId = 4;
}
message GetMatchesByEpicIdResponse {
  int32 status = 1;
  repeated string error = 2;
  int64 forwardCursor = 3;
  int64 backwardCursor = 4;
  repeated MatchListItem matchlist = 5;
}
message GetMatchResultByIdRequest {
  int64 id = 1;
}
message GetMatchResultByIdResponse {
  int32 status = 1;
  repeated string error = 2;
  int64 matchId = 3;
  string matchUuid = 4;
  int32 shardsPlayers = 5;
  int32 shardsLeft = 6;
  string startedAt = 7;
  string finishedAt = 8;
}